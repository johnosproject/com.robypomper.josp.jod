[
  {
    "id": "JCP",
    "realm": "jcp",
    "displayName": "John Cloud Platform",
    "displayNameHtml": "John Cloud Platform",
    "notBefore": 0,
    "revokeRefreshToken": false,
    "refreshTokenMaxReuse": 0,
    "accessTokenLifespan": 300,
    "accessTokenLifespanForImplicitFlow": 900,
    "ssoSessionIdleTimeout": 1800,
    "ssoSessionMaxLifespan": 36000,
    "ssoSessionIdleTimeoutRememberMe": 0,
    "ssoSessionMaxLifespanRememberMe": 0,
    "offlineSessionIdleTimeout": 2592000,
    "offlineSessionMaxLifespanEnabled": false,
    "offlineSessionMaxLifespan": 5184000,
    "clientSessionIdleTimeout": 0,
    "clientSessionMaxLifespan": 0,
    "clientOfflineSessionIdleTimeout": 0,
    "clientOfflineSessionMaxLifespan": 0,
    "accessCodeLifespan": 60,
    "accessCodeLifespanUserAction": 300,
    "accessCodeLifespanLogin": 1800,
    "actionTokenGeneratedByAdminLifespan": 43200,
    "actionTokenGeneratedByUserLifespan": 300,
    "oauth2DeviceCodeLifespan": 600,
    "oauth2DevicePollingInterval": 600,
    "enabled": true,
    "sslRequired": "all",
    "registrationAllowed": true,
    "registrationEmailAsUsername": false,
    "rememberMe": true,
    "verifyEmail": true,
    "loginWithEmailAllowed": true,
    "duplicateEmailsAllowed": false,
    "resetPasswordAllowed": true,
    "editUsernameAllowed": true,
    "bruteForceProtected": false,
    "permanentLockout": false,
    "maxFailureWaitSeconds": 900,
    "minimumQuickLoginWaitSeconds": 60,
    "waitIncrementSeconds": 60,
    "quickLoginCheckMilliSeconds": 1000,
    "maxDeltaTimeSeconds": 43200,
    "failureFactor": 30,
    "roles": {
      "realm": [
        {
          "id": "69be001f-dd39-4ed6-8f41-6cf760338d33",
          "name": "offline_access",
          "description": "${role_offline-access}",
          "composite": false,
          "clientRole": false,
          "containerId": "JCP",
          "attributes": {}
        },
        {
          "id": "eaeb3815-40e8-4bd5-86e2-1c91482f8c68",
          "name": "default-roles-jcp",
          "description": "${role_default-roles-jcp}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "manage-account",
                "view-profile"
              ]
            }
          },
          "clientRole": false,
          "containerId": "JCP",
          "attributes": {}
        },
        {
          "id": "76afc719-e20b-4274-a051-e691552048e5",
          "name": "jcp",
          "description": "Define all clients that represent a JCP Service.\nRole assigned only to JCP Services. This role allow to access JCP's protected resources.",
          "composite": false,
          "clientRole": false,
          "containerId": "JCP",
          "attributes": {}
        },
        {
          "id": "f5cf0caf-a20b-4a5a-a8eb-3f232e68eff1",
          "name": "obj",
          "description": "Define all clients that represent an Object.",
          "composite": false,
          "clientRole": false,
          "containerId": "JCP",
          "attributes": {}
        },
        {
          "id": "9a861f36-2367-4ad0-b458-69153047fe87",
          "name": "uma_authorization",
          "description": "${role_uma_authorization}",
          "composite": false,
          "clientRole": false,
          "containerId": "JCP",
          "attributes": {}
        },
        {
          "id": "c4ebf8d2-311f-49c0-b810-1dd5d1b68137",
          "name": "srv",
          "description": "Define all clients that represent a Service.",
          "composite": false,
          "clientRole": false,
          "containerId": "JCP",
          "attributes": {}
        },
        {
          "id": "e1e5349d-8bb4-47b7-8c7b-9af997ff70f3",
          "name": "mng",
          "description": "Define all users that can manage the JCP platform.",
          "composite": false,
          "clientRole": false,
          "containerId": "JCP",
          "attributes": {}
        }
      ],
      "client": {
        "realm-management": [
          {
            "id": "e55973b2-1258-4b99-8bba-2237b624d85a",
            "name": "query-realms",
            "description": "${role_query-realms}",
            "composite": false,
            "clientRole": true,
            "containerId": "26279715-4c82-41b0-bd5f-9493f94c1eb3",
            "attributes": {}
          },
          {
            "id": "5ee71034-396e-4da4-acd9-ecde3be49157",
            "name": "query-clients",
            "description": "${role_query-clients}",
            "composite": false,
            "clientRole": true,
            "containerId": "26279715-4c82-41b0-bd5f-9493f94c1eb3",
            "attributes": {}
          },
          {
            "id": "f323f7fc-ff30-4f37-9f9e-2765e34f9032",
            "name": "view-authorization",
            "description": "${role_view-authorization}",
            "composite": false,
            "clientRole": true,
            "containerId": "26279715-4c82-41b0-bd5f-9493f94c1eb3",
            "attributes": {}
          },
          {
            "id": "794793db-6bd2-4371-8da8-74df1d9d9fe9",
            "name": "view-realm",
            "description": "${role_view-realm}",
            "composite": false,
            "clientRole": true,
            "containerId": "26279715-4c82-41b0-bd5f-9493f94c1eb3",
            "attributes": {}
          },
          {
            "id": "6b9bb1f8-3d8e-4c78-93df-847967d21d0c",
            "name": "manage-events",
            "description": "${role_manage-events}",
            "composite": false,
            "clientRole": true,
            "containerId": "26279715-4c82-41b0-bd5f-9493f94c1eb3",
            "attributes": {}
          },
          {
            "id": "874ea9dc-1b3a-4763-818f-aab58789fe5f",
            "name": "view-identity-providers",
            "description": "${role_view-identity-providers}",
            "composite": false,
            "clientRole": true,
            "containerId": "26279715-4c82-41b0-bd5f-9493f94c1eb3",
            "attributes": {}
          },
          {
            "id": "13107b14-f4f8-4457-89d5-e6ca110d4614",
            "name": "query-users",
            "description": "${role_query-users}",
            "composite": false,
            "clientRole": true,
            "containerId": "26279715-4c82-41b0-bd5f-9493f94c1eb3",
            "attributes": {}
          },
          {
            "id": "4787f732-605e-4156-9307-24ac09ea6f43",
            "name": "manage-identity-providers",
            "description": "${role_manage-identity-providers}",
            "composite": false,
            "clientRole": true,
            "containerId": "26279715-4c82-41b0-bd5f-9493f94c1eb3",
            "attributes": {}
          },
          {
            "id": "b1be621d-3137-4c1c-92cc-c3ec79f9a03b",
            "name": "view-users",
            "description": "${role_view-users}",
            "composite": true,
            "composites": {
              "client": {
                "realm-management": [
                  "query-groups",
                  "query-users"
                ]
              }
            },
            "clientRole": true,
            "containerId": "26279715-4c82-41b0-bd5f-9493f94c1eb3",
            "attributes": {}
          },
          {
            "id": "6a5c3a38-426e-4d70-8abd-311d366b83a5",
            "name": "manage-realm",
            "description": "${role_manage-realm}",
            "composite": false,
            "clientRole": true,
            "containerId": "26279715-4c82-41b0-bd5f-9493f94c1eb3",
            "attributes": {}
          },
          {
            "id": "b9f30839-863c-4678-9e01-863ede7721bb",
            "name": "query-groups",
            "description": "${role_query-groups}",
            "composite": false,
            "clientRole": true,
            "containerId": "26279715-4c82-41b0-bd5f-9493f94c1eb3",
            "attributes": {}
          },
          {
            "id": "96de5280-72eb-4cb3-8ca6-d297c500b70e",
            "name": "view-clients",
            "description": "${role_view-clients}",
            "composite": true,
            "composites": {
              "client": {
                "realm-management": [
                  "query-clients"
                ]
              }
            },
            "clientRole": true,
            "containerId": "26279715-4c82-41b0-bd5f-9493f94c1eb3",
            "attributes": {}
          },
          {
            "id": "8e15085b-1d71-4842-a474-294fe69fb46c",
            "name": "realm-admin",
            "description": "${role_realm-admin}",
            "composite": true,
            "composites": {
              "client": {
                "realm-management": [
                  "query-realms",
                  "query-clients",
                  "view-realm",
                  "view-authorization",
                  "manage-events",
                  "view-identity-providers",
                  "query-users",
                  "manage-identity-providers",
                  "view-users",
                  "manage-realm",
                  "view-clients",
                  "query-groups",
                  "manage-authorization",
                  "impersonation",
                  "manage-clients",
                  "view-events",
                  "create-client",
                  "manage-users"
                ]
              }
            },
            "clientRole": true,
            "containerId": "26279715-4c82-41b0-bd5f-9493f94c1eb3",
            "attributes": {}
          },
          {
            "id": "e46e4420-f60b-4f7c-84cd-fc1d3b2267b4",
            "name": "impersonation",
            "description": "${role_impersonation}",
            "composite": false,
            "clientRole": true,
            "containerId": "26279715-4c82-41b0-bd5f-9493f94c1eb3",
            "attributes": {}
          },
          {
            "id": "28deb9f7-99ee-4fdc-b2db-35cb8931b54a",
            "name": "manage-authorization",
            "description": "${role_manage-authorization}",
            "composite": false,
            "clientRole": true,
            "containerId": "26279715-4c82-41b0-bd5f-9493f94c1eb3",
            "attributes": {}
          },
          {
            "id": "e1afcadf-52bd-4d8a-9b03-4caa91f3997f",
            "name": "manage-clients",
            "description": "${role_manage-clients}",
            "composite": false,
            "clientRole": true,
            "containerId": "26279715-4c82-41b0-bd5f-9493f94c1eb3",
            "attributes": {}
          },
          {
            "id": "69be48fc-54cd-42bc-9cab-b1f9b6ad0e28",
            "name": "view-events",
            "description": "${role_view-events}",
            "composite": false,
            "clientRole": true,
            "containerId": "26279715-4c82-41b0-bd5f-9493f94c1eb3",
            "attributes": {}
          },
          {
            "id": "16677ca1-9121-498c-92ea-1be759541d3e",
            "name": "create-client",
            "description": "${role_create-client}",
            "composite": false,
            "clientRole": true,
            "containerId": "26279715-4c82-41b0-bd5f-9493f94c1eb3",
            "attributes": {}
          },
          {
            "id": "ec8272dd-7dd5-4fbb-b3a6-d527c2e5862e",
            "name": "manage-users",
            "description": "${role_manage-users}",
            "composite": false,
            "clientRole": true,
            "containerId": "26279715-4c82-41b0-bd5f-9493f94c1eb3",
            "attributes": {}
          }
        ],
        "jcp-apis": [],
        "security-admin-console": [],
        "jcp-gws": [],
        "account-console": [],
        "broker": [
          {
            "id": "4c4bab52-bdde-452b-a8bf-8993159e4dbb",
            "name": "read-token",
            "description": "${role_read-token}",
            "composite": false,
            "clientRole": true,
            "containerId": "42998bbf-4b42-442d-9e74-c913694fd655",
            "attributes": {}
          }
        ],
        "jcp-all": [],
        "test-client-obj": [],
        "test-client-srv": [],
        "jcp-jsl-web-bridge": [],
        "jcp-swagger": [],
        "admin-cli": [],
        "jcp-fe": [],
        "account": [
          {
            "id": "f66031c1-bbfc-4770-987c-e9fe2af07f9c",
            "name": "manage-account",
            "description": "${role_manage-account}",
            "composite": true,
            "composites": {
              "client": {
                "account": [
                  "manage-account-links"
                ]
              }
            },
            "clientRole": true,
            "containerId": "d17936ea-07bf-4c15-8782-5d59451d39f9",
            "attributes": {}
          },
          {
            "id": "c8143ebe-adff-4e32-abc5-4454c1067349",
            "name": "view-applications",
            "description": "${role_view-applications}",
            "composite": false,
            "clientRole": true,
            "containerId": "d17936ea-07bf-4c15-8782-5d59451d39f9",
            "attributes": {}
          },
          {
            "id": "8080ac26-8182-48f9-9f11-3c9e4320db5a",
            "name": "manage-consent",
            "description": "${role_manage-consent}",
            "composite": true,
            "composites": {
              "client": {
                "account": [
                  "view-consent"
                ]
              }
            },
            "clientRole": true,
            "containerId": "d17936ea-07bf-4c15-8782-5d59451d39f9",
            "attributes": {}
          },
          {
            "id": "eb83b771-450e-4229-b09a-445bcc515114",
            "name": "view-consent",
            "description": "${role_view-consent}",
            "composite": false,
            "clientRole": true,
            "containerId": "d17936ea-07bf-4c15-8782-5d59451d39f9",
            "attributes": {}
          },
          {
            "id": "f87d3271-627e-4963-bb96-6ed2bda3ee89",
            "name": "view-profile",
            "description": "${role_view-profile}",
            "composite": false,
            "clientRole": true,
            "containerId": "d17936ea-07bf-4c15-8782-5d59451d39f9",
            "attributes": {}
          },
          {
            "id": "fd4edf75-cebe-4ec0-b296-5f7881e2a1b8",
            "name": "manage-account-links",
            "description": "${role_manage-account-links}",
            "composite": false,
            "clientRole": true,
            "containerId": "d17936ea-07bf-4c15-8782-5d59451d39f9",
            "attributes": {}
          },
          {
            "id": "4f603c3c-c794-4da3-86b1-cbca99b2ffb4",
            "name": "delete-account",
            "description": "${role_delete-account}",
            "composite": false,
            "clientRole": true,
            "containerId": "d17936ea-07bf-4c15-8782-5d59451d39f9",
            "attributes": {}
          }
        ]
      }
    },
    "groups": [],
    "defaultRole": {
      "id": "eaeb3815-40e8-4bd5-86e2-1c91482f8c68",
      "name": "default-roles-jcp",
      "description": "${role_default-roles-jcp}",
      "composite": true,
      "clientRole": false,
      "containerId": "JCP"
    },
    "requiredCredentials": [
      "password"
    ],
    "otpPolicyType": "totp",
    "otpPolicyAlgorithm": "HmacSHA1",
    "otpPolicyInitialCounter": 0,
    "otpPolicyDigits": 6,
    "otpPolicyLookAheadWindow": 1,
    "otpPolicyPeriod": 30,
    "otpSupportedApplications": [
      "FreeOTP",
      "Google Authenticator"
    ],
    "webAuthnPolicyRpEntityName": "keycloak",
    "webAuthnPolicySignatureAlgorithms": [
      "ES256"
    ],
    "webAuthnPolicyRpId": "",
    "webAuthnPolicyAttestationConveyancePreference": "not specified",
    "webAuthnPolicyAuthenticatorAttachment": "not specified",
    "webAuthnPolicyRequireResidentKey": "not specified",
    "webAuthnPolicyUserVerificationRequirement": "not specified",
    "webAuthnPolicyCreateTimeout": 0,
    "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
    "webAuthnPolicyAcceptableAaguids": [],
    "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
    "webAuthnPolicyPasswordlessSignatureAlgorithms": [
      "ES256"
    ],
    "webAuthnPolicyPasswordlessRpId": "",
    "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
    "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
    "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
    "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
    "webAuthnPolicyPasswordlessCreateTimeout": 0,
    "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
    "webAuthnPolicyPasswordlessAcceptableAaguids": [],
    "users": [
      {
        "id": "f9280be1-0e2e-447b-85b7-886ef03c36d6",
        "createdTimestamp": 1606918963990,
        "username": "service-account-jcp-all",
        "enabled": true,
        "totp": false,
        "emailVerified": false,
        "serviceAccountClientId": "jcp-all",
        "credentials": [],
        "disableableCredentialTypes": [],
        "requiredActions": [],
        "realmRoles": [
          "offline_access"
        ],
        "clientRoles": {
          "realm-management": [
            "view-users"
          ],
          "account": [
            "manage-account",
            "view-profile"
          ]
        },
        "notBefore": 0,
        "groups": []
      },
      {
        "id": "fa6fd8f7-558a-4726-a18f-a1a78da2ddbb",
        "createdTimestamp": 1606373145852,
        "username": "service-account-jcp-apis",
        "enabled": true,
        "totp": false,
        "emailVerified": false,
        "serviceAccountClientId": "jcp-apis",
        "credentials": [],
        "disableableCredentialTypes": [],
        "requiredActions": [],
        "realmRoles": [
          "offline_access"
        ],
        "clientRoles": {
          "realm-management": [
            "view-users"
          ],
          "account": [
            "manage-account",
            "view-profile"
          ]
        },
        "notBefore": 0,
        "groups": []
      },
      {
        "id": "f327678c-a425-4833-9bda-bc292d248edc",
        "createdTimestamp": 1597063943472,
        "username": "service-account-jcp-fe",
        "enabled": true,
        "totp": false,
        "emailVerified": false,
        "serviceAccountClientId": "jcp-fe",
        "credentials": [],
        "disableableCredentialTypes": [],
        "requiredActions": [],
        "realmRoles": [
          "offline_access"
        ],
        "clientRoles": {
          "account": [
            "manage-account",
            "view-profile"
          ]
        },
        "notBefore": 0,
        "groups": []
      },
      {
        "id": "99458d75-8fde-4b5b-94fc-9ec8e0e31ed9",
        "createdTimestamp": 1606373218298,
        "username": "service-account-jcp-gws",
        "enabled": true,
        "totp": false,
        "emailVerified": false,
        "serviceAccountClientId": "jcp-gws",
        "credentials": [],
        "disableableCredentialTypes": [],
        "requiredActions": [],
        "realmRoles": [
          "offline_access"
        ],
        "clientRoles": {
          "account": [
            "manage-account",
            "view-profile"
          ]
        },
        "notBefore": 0,
        "groups": []
      },
      {
        "id": "db199737-0cfd-427b-aa6b-47ab70a16631",
        "createdTimestamp": 1606373300845,
        "username": "service-account-jcp-jsl-web-bridge",
        "enabled": true,
        "totp": false,
        "emailVerified": false,
        "serviceAccountClientId": "jcp-jsl-web-bridge",
        "credentials": [],
        "disableableCredentialTypes": [],
        "requiredActions": [],
        "realmRoles": [
          "offline_access"
        ],
        "clientRoles": {
          "account": [
            "manage-account",
            "view-profile"
          ]
        },
        "notBefore": 0,
        "groups": []
      },
      {
        "id": "11762374-13ab-4c5c-b86b-a720f564571e",
        "createdTimestamp": 1583750956826,
        "username": "service-account-test-client-obj",
        "enabled": true,
        "totp": false,
        "emailVerified": false,
        "serviceAccountClientId": "test-client-obj",
        "credentials": [],
        "disableableCredentialTypes": [],
        "requiredActions": [],
        "realmRoles": [
          "offline_access",
          "obj"
        ],
        "clientRoles": {
          "account": [
            "manage-account",
            "view-profile"
          ]
        },
        "notBefore": 0,
        "groups": []
      },
      {
        "id": "d1ef3618-7b27-4cd8-a465-389f52b6ddff",
        "createdTimestamp": 1594117616632,
        "username": "service-account-test-client-srv",
        "enabled": true,
        "totp": false,
        "emailVerified": false,
        "serviceAccountClientId": "test-client-srv",
        "credentials": [],
        "disableableCredentialTypes": [],
        "requiredActions": [],
        "realmRoles": [
          "offline_access"
        ],
        "clientRoles": {
          "account": [
            "manage-account",
            "view-profile"
          ]
        },
        "notBefore": 0,
        "groups": []
      },
      {
        "id": "3d6bd9ed-8d63-43d6-a465-dbe9029e04c8",
        "createdTimestamp": 1583603873753,
        "username": "usr_mng",
        "enabled": true,
        "totp": false,
        "emailVerified": true,
        "firstName": "Manager",
        "lastName": "User",
        "email": "usr_mng@mail.com",
        "credentials": [
          {
            "id": "152617c3-2dd9-4d09-82a1-b593a559832b",
            "type": "password",
            "createdDate": 1606406266589,
            "secretData": "{\"value\":\"HjoR1GHWgOiIPOsb2825P8M5zdBcv72j2Exv59zScbqe0OfhqWAOJiCTbu3o0Cx1G48GpaTmRUG1J/u1/+7yjw==\",\"salt\":\"+SQAZaSloPLsGPY3xMmA3A==\"}",
            "credentialData": "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\"}"
          }
        ],
        "disableableCredentialTypes": [],
        "requiredActions": [],
        "realmRoles": [
          "offline_access",
          "mng"
        ],
        "clientRoles": {
          "account": [
            "manage-account",
            "view-profile"
          ]
        },
        "notBefore": 0,
        "groups": []
      },
      {
        "id": "67de275c-1861-4e86-8e03-2ef643c8a592",
        "createdTimestamp": 1583746021581,
        "username": "usr_std",
        "enabled": true,
        "totp": false,
        "emailVerified": true,
        "firstName": "Standard",
        "lastName": "User",
        "email": "usr_std@gmail.com",
        "credentials": [
          {
            "id": "d975d388-e912-439d-b13e-63a4ef92a120",
            "type": "password",
            "createdDate": 1606672235956,
            "secretData": "{\"value\":\"xZBddXVasmJQ/OXhoSIp+Joqo9r2vBqyrVgPlW2syDLs3aTDpene6FUx0APrAvEkiKoL3xmqCBovvFwbYCVTGA==\",\"salt\":\"GU+Op5G5n8/0xJ58qZNXgw==\"}",
            "credentialData": "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\"}"
          }
        ],
        "disableableCredentialTypes": [],
        "requiredActions": [],
        "realmRoles": [
          "offline_access"
        ],
        "clientRoles": {
          "account": [
            "manage-account",
            "view-profile"
          ]
        },
        "notBefore": 0,
        "groups": []
      }
    ],
    "scopeMappings": [
      {
        "clientScope": "offline_access",
        "roles": [
          "offline_access"
        ]
      }
    ],
    "clientScopeMappings": {
      "account": [
        {
          "client": "account-console",
          "roles": [
            "manage-account"
          ]
        }
      ]
    },
    "clients": [
      {
        "id": "d17936ea-07bf-4c15-8782-5d59451d39f9",
        "clientId": "account",
        "name": "${client_account}",
        "rootUrl": "${authBaseUrl}",
        "baseUrl": "/realms/jcp/account/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "ad0b902f-8865-4d8f-9cdf-ccdbbaec12a1",
        "redirectUris": [
          "/realms/jcp/account/*"
        ],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "roles",
          "profile",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "668cefc1-9844-43a3-bad2-00a21e312aed",
        "clientId": "account-console",
        "name": "${client_account-console}",
        "rootUrl": "${authBaseUrl}",
        "baseUrl": "/realms/JCP/account/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "dc3a0c53-126f-4702-9dc5-7fa3f872887e",
        "redirectUris": [
          "/realms/JCP/account/*"
        ],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "pkce.code.challenge.method": "S256"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "protocolMappers": [
          {
            "id": "3dc1f0a1-6228-4cce-947e-741e0a3b9517",
            "name": "audience resolve",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-audience-resolve-mapper",
            "consentRequired": false,
            "config": {}
          }
        ],
        "defaultClientScopes": [
          "web-origins",
          "roles",
          "profile",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "52f9725a-de85-48db-8218-972f375d55fe",
        "clientId": "admin-cli",
        "name": "${client_admin-cli}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "43e69f9d-b9f2-4d27-ab28-5946bd7bf97d",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": false,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": true,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "roles",
          "profile",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "42998bbf-4b42-442d-9e74-c913694fd655",
        "clientId": "broker",
        "name": "${client_broker}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "7d25efd2-83ab-42ca-b71a-bea0aadd2652",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "roles",
          "profile",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "daeadaae-20ea-41fe-9659-200c082b455d",
        "clientId": "jcp-all",
        "name": "JCP All",
        "rootUrl": "https://localhost:9000",
        "adminUrl": "https://localhost:9000",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "27e3d70d-5dd0-433e-a85a-40fa4b66d1ad",
        "redirectUris": [
          "*"
        ],
        "webOrigins": [
          "https://localhost:9000"
        ],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": true,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "id.token.as.detached.signature": "false",
          "saml.assertion.signature": "false",
          "saml.force.post.binding": "false",
          "saml.multivalued.roles": "false",
          "saml.encrypt": "false",
          "oauth2.device.authorization.grant.enabled": "false",
          "backchannel.logout.revoke.offline.tokens": "false",
          "saml.server.signature": "false",
          "saml.server.signature.keyinfo.ext": "false",
          "use.refresh.tokens": "true",
          "exclude.session.state.from.auth.response": "false",
          "oidc.ciba.grant.enabled": "false",
          "saml.artifact.binding": "false",
          "backchannel.logout.session.required": "false",
          "client_credentials.use_refresh_token": "true",
          "saml_force_name_id_format": "false",
          "saml.client.signature": "false",
          "tls.client.certificate.bound.access.tokens": "false",
          "saml.authnstatement": "false",
          "display.on.consent.screen": "false",
          "saml.onetimeuse.condition": "false"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": true,
        "nodeReRegistrationTimeout": -1,
        "protocolMappers": [
          {
            "id": "03d86d50-76a9-4ca0-96e7-6a29ff9d3201",
            "name": "Srv role",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-hardcoded-role-mapper",
            "consentRequired": false,
            "config": {
              "role": "srv"
            }
          },
          {
            "id": "68e894ab-dfaa-4d35-89fa-4291fd1df9b5",
            "name": "Client IP Address",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "clientAddress",
              "userinfo.token.claim": "true",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientAddress",
              "jsonType.label": "String"
            }
          },
          {
            "id": "2be740a5-ef19-4443-834e-25cfa415ee0b",
            "name": "Jcp role",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-hardcoded-role-mapper",
            "consentRequired": false,
            "config": {
              "role": "jcp"
            }
          },
          {
            "id": "3e40b82c-c73e-4e3d-add9-84d32dc3c5c4",
            "name": "Client ID",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "clientId",
              "userinfo.token.claim": "true",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientId",
              "jsonType.label": "String"
            }
          },
          {
            "id": "7b0a1b17-fff9-4feb-bbfb-097536d0b603",
            "name": "Client Host",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "clientHost",
              "userinfo.token.claim": "true",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientHost",
              "jsonType.label": "String"
            }
          }
        ],
        "defaultClientScopes": [
          "web-origins",
          "roles",
          "profile",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "66baa3bb-c393-473f-849b-29833cd002bc",
        "clientId": "jcp-apis",
        "name": "JCP APIs",
        "rootUrl": "https://localhost:9001",
        "adminUrl": "https://localhost:9001",
        "baseUrl": "",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "6ac0c0d9-50db-407d-946c-3c63cd7b7d34",
        "redirectUris": [
          "https://apis-stage.johnosproject.org/*",
          "https://localhost:9001/*",
          "https://localhost:9000/*"
        ],
        "webOrigins": [
          "https://localhost:9001"
        ],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": false,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": true,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "id.token.as.detached.signature": "false",
          "saml.assertion.signature": "false",
          "saml.force.post.binding": "false",
          "saml.multivalued.roles": "false",
          "saml.encrypt": "false",
          "oauth2.device.authorization.grant.enabled": "false",
          "backchannel.logout.revoke.offline.tokens": "false",
          "saml.server.signature": "false",
          "saml.server.signature.keyinfo.ext": "false",
          "use.refresh.tokens": "true",
          "exclude.session.state.from.auth.response": "false",
          "oidc.ciba.grant.enabled": "false",
          "saml.artifact.binding": "false",
          "backchannel.logout.session.required": "false",
          "client_credentials.use_refresh_token": "true",
          "saml_force_name_id_format": "false",
          "saml.client.signature": "false",
          "tls.client.certificate.bound.access.tokens": "false",
          "saml.authnstatement": "false",
          "display.on.consent.screen": "false",
          "saml.onetimeuse.condition": "false"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": true,
        "nodeReRegistrationTimeout": -1,
        "protocolMappers": [
          {
            "id": "ed83e22e-cf81-4fb0-8712-a34bb7756c0c",
            "name": "Client ID",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "clientId",
              "userinfo.token.claim": "true",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientId",
              "jsonType.label": "String"
            }
          },
          {
            "id": "b69891bc-d651-4423-8d44-f6ffb5e0a393",
            "name": "Jcp role",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-hardcoded-role-mapper",
            "consentRequired": false,
            "config": {
              "role": "jcp"
            }
          },
          {
            "id": "76989525-1745-40e9-a06d-6c47d1722ba2",
            "name": "Client IP Address",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "clientAddress",
              "userinfo.token.claim": "true",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientAddress",
              "jsonType.label": "String"
            }
          },
          {
            "id": "4fa55da7-08a8-46f0-8d47-cc2380b871b3",
            "name": "Client Host",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "clientHost",
              "userinfo.token.claim": "true",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientHost",
              "jsonType.label": "String"
            }
          }
        ],
        "defaultClientScopes": [
          "web-origins",
          "roles",
          "profile",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "fdb6d027-9e63-4327-a35b-611c48832b36",
        "clientId": "jcp-fe",
        "name": "JCP FrontEnd",
        "rootUrl": "https://localhost:9004",
        "adminUrl": "https://localhost:9004",
        "baseUrl": "",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "f379a100-46bb-4fc8-a660-947a98a3afab",
        "redirectUris": [
          "*"
        ],
        "webOrigins": [
          "https://localhost:9004"
        ],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": true,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "id.token.as.detached.signature": "false",
          "saml.assertion.signature": "false",
          "saml.force.post.binding": "false",
          "saml.multivalued.roles": "false",
          "saml.encrypt": "false",
          "oauth2.device.authorization.grant.enabled": "false",
          "backchannel.logout.revoke.offline.tokens": "false",
          "saml.server.signature": "false",
          "saml.server.signature.keyinfo.ext": "false",
          "use.refresh.tokens": "true",
          "exclude.session.state.from.auth.response": "false",
          "oidc.ciba.grant.enabled": "false",
          "saml.artifact.binding": "false",
          "backchannel.logout.session.required": "false",
          "client_credentials.use_refresh_token": "true",
          "saml_force_name_id_format": "false",
          "saml.client.signature": "false",
          "tls.client.certificate.bound.access.tokens": "false",
          "saml.authnstatement": "false",
          "display.on.consent.screen": "false",
          "saml.onetimeuse.condition": "false"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": true,
        "nodeReRegistrationTimeout": -1,
        "protocolMappers": [
          {
            "id": "5916f17f-854b-4152-beb7-2ff004f3677e",
            "name": "Jcp role",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-hardcoded-role-mapper",
            "consentRequired": false,
            "config": {
              "role": "jcp"
            }
          },
          {
            "id": "a7f32e91-de6c-4a75-93cc-d54010492ed2",
            "name": "Client IP Address",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "clientAddress",
              "userinfo.token.claim": "true",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientAddress",
              "jsonType.label": "String"
            }
          },
          {
            "id": "52546ed5-2b90-4428-85f2-dfbb29c1bc75",
            "name": "Srv role",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-hardcoded-role-mapper",
            "consentRequired": false,
            "config": {
              "role": "srv"
            }
          },
          {
            "id": "3df14ea3-79e2-4b70-a113-ea93f55befe7",
            "name": "Client Host",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "clientHost",
              "userinfo.token.claim": "true",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientHost",
              "jsonType.label": "String"
            }
          },
          {
            "id": "13a714a9-7cff-4110-95fc-1e9b29b6f90a",
            "name": "Client ID",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "clientId",
              "userinfo.token.claim": "true",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientId",
              "jsonType.label": "String"
            }
          }
        ],
        "defaultClientScopes": [
          "web-origins",
          "roles",
          "profile",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "f0c51c27-5fa8-4b21-9e5d-83d7c2a1d501",
        "clientId": "jcp-gws",
        "name": "JCP Gateways",
        "rootUrl": "https://localhost:9002",
        "adminUrl": "https://localhost:9002",
        "baseUrl": "",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "4f5985ac-0e42-4f45-ae74-a859d4fd5184",
        "redirectUris": [
          "https://localhost:9000/*",
          "https://localhost:9002/*",
          "https://gws-stage.johnosproject.org/*"
        ],
        "webOrigins": [
          "https://localhost:9002"
        ],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": false,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": true,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "id.token.as.detached.signature": "false",
          "saml.assertion.signature": "false",
          "saml.force.post.binding": "false",
          "saml.multivalued.roles": "false",
          "saml.encrypt": "false",
          "oauth2.device.authorization.grant.enabled": "false",
          "backchannel.logout.revoke.offline.tokens": "false",
          "saml.server.signature": "false",
          "saml.server.signature.keyinfo.ext": "false",
          "use.refresh.tokens": "true",
          "exclude.session.state.from.auth.response": "false",
          "oidc.ciba.grant.enabled": "false",
          "saml.artifact.binding": "false",
          "backchannel.logout.session.required": "false",
          "client_credentials.use_refresh_token": "true",
          "saml_force_name_id_format": "false",
          "saml.client.signature": "false",
          "tls.client.certificate.bound.access.tokens": "false",
          "saml.authnstatement": "false",
          "display.on.consent.screen": "false",
          "saml.onetimeuse.condition": "false"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": true,
        "nodeReRegistrationTimeout": -1,
        "protocolMappers": [
          {
            "id": "7eac23a0-24bd-4b32-9be8-a019078b8fc5",
            "name": "Client Host",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "clientHost",
              "userinfo.token.claim": "true",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientHost",
              "jsonType.label": "String"
            }
          },
          {
            "id": "0e4e6303-a865-487a-a399-68a5b6427f33",
            "name": "Client IP Address",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "clientAddress",
              "userinfo.token.claim": "true",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientAddress",
              "jsonType.label": "String"
            }
          },
          {
            "id": "a0529a48-048f-4690-86fd-fbd79da69f9e",
            "name": "Client ID",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "clientId",
              "userinfo.token.claim": "true",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientId",
              "jsonType.label": "String"
            }
          },
          {
            "id": "2f2e8ca1-e978-4f0e-ac17-aa3124aa0107",
            "name": "Jcp role",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-hardcoded-role-mapper",
            "consentRequired": false,
            "config": {
              "role": "jcp"
            }
          }
        ],
        "defaultClientScopes": [
          "web-origins",
          "roles",
          "profile",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "b7ecfc11-c730-4b0c-88e3-7be2d41c0a2f",
        "clientId": "jcp-jsl-web-bridge",
        "name": "JCP JSL Web Bridge",
        "rootUrl": "https://localhost:9003",
        "adminUrl": "https://localhost:9003",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "7e27c5b9-2a6a-4b4e-b4a7-c8118b2b1083",
        "redirectUris": [
          "https://jsl-stage.johnosproject.org/*",
          "https://localhost:9000/*",
          "https://localhost:9003/*"
        ],
        "webOrigins": [
          "https://localhost:9003"
        ],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": false,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": true,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "id.token.as.detached.signature": "false",
          "saml.assertion.signature": "false",
          "saml.force.post.binding": "false",
          "saml.multivalued.roles": "false",
          "saml.encrypt": "false",
          "oauth2.device.authorization.grant.enabled": "false",
          "backchannel.logout.revoke.offline.tokens": "false",
          "saml.server.signature": "false",
          "saml.server.signature.keyinfo.ext": "false",
          "use.refresh.tokens": "true",
          "exclude.session.state.from.auth.response": "false",
          "oidc.ciba.grant.enabled": "false",
          "saml.artifact.binding": "false",
          "backchannel.logout.session.required": "false",
          "client_credentials.use_refresh_token": "true",
          "saml_force_name_id_format": "false",
          "saml.client.signature": "false",
          "tls.client.certificate.bound.access.tokens": "false",
          "saml.authnstatement": "false",
          "display.on.consent.screen": "false",
          "saml.onetimeuse.condition": "false"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": true,
        "nodeReRegistrationTimeout": -1,
        "protocolMappers": [
          {
            "id": "805c3b25-2b7e-4907-968f-d1c7e798e871",
            "name": "Client Host",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "clientHost",
              "userinfo.token.claim": "true",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientHost",
              "jsonType.label": "String"
            }
          },
          {
            "id": "37c46fae-eb4c-48f9-8322-06f3da776bf0",
            "name": "Jcp role",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-hardcoded-role-mapper",
            "consentRequired": false,
            "config": {
              "role": "srv"
            }
          },
          {
            "id": "e4ad9191-b230-40b1-bebb-a8cd1d1cb78f",
            "name": "Client IP Address",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "clientAddress",
              "userinfo.token.claim": "true",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientAddress",
              "jsonType.label": "String"
            }
          },
          {
            "id": "95a6cf5b-edb5-47a8-a170-a9030729ea64",
            "name": "Client ID",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "clientId",
              "userinfo.token.claim": "true",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientId",
              "jsonType.label": "String"
            }
          },
          {
            "id": "00820cac-7272-4758-962b-b8030365a5a9",
            "name": "Srv role",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-hardcoded-role-mapper",
            "consentRequired": false,
            "config": {
              "role": "srv"
            }
          }
        ],
        "defaultClientScopes": [
          "web-origins",
          "roles",
          "profile",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "0f5346de-6194-49d8-92e0-7e69f25d11b2",
        "clientId": "jcp-swagger",
        "name": "Swagger UI (Test)",
        "description": "Client used by Swagger UI to access all APIs (All roles) using Implicit auth flow (the only onw supported by Swagger).",
        "rootUrl": "https://localhost:9001/swagger-ui.html",
        "adminUrl": "https://localhost:9001",
        "baseUrl": "",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "cf319f62-5275-4092-b346-65448535748d",
        "redirectUris": [
          "*"
        ],
        "webOrigins": [
          "https://localhost:9001"
        ],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": false,
        "implicitFlowEnabled": true,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "saml.assertion.signature": "false",
          "saml.force.post.binding": "false",
          "saml.multivalued.roles": "false",
          "saml.encrypt": "false",
          "saml.server.signature": "false",
          "saml.server.signature.keyinfo.ext": "false",
          "exclude.session.state.from.auth.response": "false",
          "saml_force_name_id_format": "false",
          "saml.client.signature": "false",
          "tls.client.certificate.bound.access.tokens": "false",
          "saml.authnstatement": "false",
          "display.on.consent.screen": "false",
          "saml.onetimeuse.condition": "false"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": true,
        "nodeReRegistrationTimeout": -1,
        "protocolMappers": [
          {
            "id": "4b10483d-dcd5-46de-b884-62663358b860",
            "name": "Obj role (Swagger)",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-hardcoded-role-mapper",
            "consentRequired": false,
            "config": {
              "role": "obj"
            }
          },
          {
            "id": "70a023ba-a1be-4c96-a91f-5ffe2b713627",
            "name": "Jcp role (Swagger)",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-hardcoded-role-mapper",
            "consentRequired": false,
            "config": {
              "role": "jcp"
            }
          },
          {
            "id": "a6d851cc-321d-4f03-95e5-137d3b3b9df0",
            "name": "Srv role (Swagger)",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-hardcoded-role-mapper",
            "consentRequired": false,
            "config": {
              "role": "srv"
            }
          }
        ],
        "defaultClientScopes": [
          "web-origins",
          "roles",
          "profile",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "26279715-4c82-41b0-bd5f-9493f94c1eb3",
        "clientId": "realm-management",
        "name": "${client_realm-management}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "dd2a10de-82f4-471f-9913-6fcda6091bdb",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": true,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "roles",
          "profile",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "3aa884c4-dffd-498c-8056-6f75e1eb953a",
        "clientId": "security-admin-console",
        "name": "${client_security-admin-console}",
        "rootUrl": "${authAdminUrl}",
        "baseUrl": "/admin/jcp/console/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "8983b16f-1a4e-4cc7-adc5-434e27d84950",
        "redirectUris": [
          "/admin/jcp/console/*"
        ],
        "webOrigins": [
          "+"
        ],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "pkce.code.challenge.method": "S256"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "protocolMappers": [
          {
            "id": "12f8df46-61f8-4101-a147-12e3f29e872d",
            "name": "locale",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "locale",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "locale",
              "jsonType.label": "String"
            }
          }
        ],
        "defaultClientScopes": [
          "web-origins",
          "roles",
          "profile",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "3564bc5d-4650-4265-ab07-ab107580c915",
        "clientId": "test-client-obj",
        "name": "Test object client",
        "rootUrl": "https://localhost:9001",
        "adminUrl": "https://localhost:9001",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "2d1f9b96-70d3-443b-b21b-08a401ddc16c",
        "redirectUris": [
          "https://localhost:9001/*"
        ],
        "webOrigins": [
          "https://localhost:9001"
        ],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": false,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": true,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "id.token.as.detached.signature": "false",
          "saml.assertion.signature": "false",
          "saml.force.post.binding": "false",
          "saml.multivalued.roles": "false",
          "saml.encrypt": "false",
          "oauth2.device.authorization.grant.enabled": "false",
          "backchannel.logout.revoke.offline.tokens": "false",
          "saml.server.signature": "false",
          "saml.server.signature.keyinfo.ext": "false",
          "use.refresh.tokens": "true",
          "exclude.session.state.from.auth.response": "false",
          "oidc.ciba.grant.enabled": "false",
          "saml.artifact.binding": "false",
          "backchannel.logout.session.required": "false",
          "client_credentials.use_refresh_token": "true",
          "saml_force_name_id_format": "false",
          "saml.client.signature": "false",
          "tls.client.certificate.bound.access.tokens": "false",
          "saml.authnstatement": "false",
          "display.on.consent.screen": "false",
          "saml.onetimeuse.condition": "false"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": true,
        "nodeReRegistrationTimeout": -1,
        "protocolMappers": [
          {
            "id": "d3fe9671-89db-4754-9ede-52df63fb7841",
            "name": "Client Host",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "clientHost",
              "userinfo.token.claim": "true",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientHost",
              "jsonType.label": "String"
            }
          },
          {
            "id": "0f399237-65c6-4184-ac64-bc88f3e5a4db",
            "name": "Client ID",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "clientId",
              "userinfo.token.claim": "true",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientId",
              "jsonType.label": "String"
            }
          },
          {
            "id": "7b1887a0-1094-4ff0-8021-591c166e570e",
            "name": "Client IP Address",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "clientAddress",
              "userinfo.token.claim": "true",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientAddress",
              "jsonType.label": "String"
            }
          }
        ],
        "defaultClientScopes": [
          "web-origins",
          "roles",
          "profile",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "79e472b0-e562-4535-a516-db7d7696a447",
        "clientId": "test-client-srv",
        "name": "Test service client",
        "rootUrl": "https://localhost:8080",
        "adminUrl": "https://localhost:8080",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "88bc8baf-c924-42b9-b691-b2d7c5cec696",
        "redirectUris": [
          "*"
        ],
        "webOrigins": [
          "https://localhost:8080"
        ],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": true,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "id.token.as.detached.signature": "false",
          "saml.assertion.signature": "false",
          "saml.force.post.binding": "false",
          "saml.multivalued.roles": "false",
          "saml.encrypt": "false",
          "oauth2.device.authorization.grant.enabled": "false",
          "backchannel.logout.revoke.offline.tokens": "false",
          "saml.server.signature": "false",
          "saml.server.signature.keyinfo.ext": "false",
          "use.refresh.tokens": "true",
          "exclude.session.state.from.auth.response": "false",
          "oidc.ciba.grant.enabled": "false",
          "saml.artifact.binding": "false",
          "backchannel.logout.session.required": "false",
          "client_credentials.use_refresh_token": "true",
          "saml_force_name_id_format": "false",
          "saml.client.signature": "false",
          "tls.client.certificate.bound.access.tokens": "false",
          "saml.authnstatement": "false",
          "display.on.consent.screen": "false",
          "saml.onetimeuse.condition": "false"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": true,
        "nodeReRegistrationTimeout": -1,
        "protocolMappers": [
          {
            "id": "4a9429e7-e58d-4a4a-927d-fff93253afcd",
            "name": "Client Host",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "clientHost",
              "userinfo.token.claim": "true",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientHost",
              "jsonType.label": "String"
            }
          },
          {
            "id": "ee4815c3-803e-482b-bf20-6b94b8c3d162",
            "name": "Client IP Address",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "clientAddress",
              "userinfo.token.claim": "true",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientAddress",
              "jsonType.label": "String"
            }
          },
          {
            "id": "918cd87c-d826-4c14-85d8-e609ccd9b919",
            "name": "Srv role",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-hardcoded-role-mapper",
            "consentRequired": false,
            "config": {
              "role": "srv"
            }
          },
          {
            "id": "c6d5b9cb-752a-4c5d-ae76-3c6c23b5d9bb",
            "name": "Client ID",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "clientId",
              "userinfo.token.claim": "true",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientId",
              "jsonType.label": "String"
            }
          }
        ],
        "defaultClientScopes": [
          "web-origins",
          "roles",
          "profile",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      }
    ],
    "clientScopes": [
      {
        "id": "685436ea-8562-4bce-a53d-48e98d30249e",
        "name": "roles",
        "description": "OpenID Connect scope for add user roles to the access token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "false",
          "consent.screen.text": "${rolesScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "e71aa237-46b1-4375-b6d7-97ba00f04398",
            "name": "audience resolve",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-audience-resolve-mapper",
            "consentRequired": false,
            "config": {}
          },
          {
            "id": "c3e6a7b0-9988-4f21-b34a-97a54a0fb73e",
            "name": "realm roles",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-realm-role-mapper",
            "consentRequired": false,
            "config": {
              "user.attribute": "foo",
              "access.token.claim": "true",
              "claim.name": "realm_access.roles",
              "jsonType.label": "String",
              "multivalued": "true"
            }
          },
          {
            "id": "fe2b3f51-8885-4cd9-ba8f-c1549314ea44",
            "name": "client roles",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-client-role-mapper",
            "consentRequired": false,
            "config": {
              "user.attribute": "foo",
              "access.token.claim": "true",
              "claim.name": "resource_access.${client_id}.roles",
              "jsonType.label": "String",
              "multivalued": "true"
            }
          }
        ]
      },
      {
        "id": "a12673c4-64cd-450e-adf0-dfd96d4ad5a6",
        "name": "email",
        "description": "OpenID Connect built-in scope: email",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "gui.order": "1",
          "consent.screen.text": "${emailScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "deebc267-e31f-4a17-a88b-63fda24276a4",
            "name": "email verified",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "emailVerified",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "email_verified",
              "jsonType.label": "boolean"
            }
          },
          {
            "id": "8bdd0733-c3b7-4196-a09c-920124eb91d2",
            "name": "email",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "email",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "email",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "e86d2fcf-e398-4282-b81e-6dde3996c1de",
        "name": "phone",
        "description": "OpenID Connect built-in scope: phone",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${phoneScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "2f1d241c-90ff-4442-80b1-4209834e7b66",
            "name": "phone number",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "phoneNumber",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "phone_number",
              "jsonType.label": "String"
            }
          },
          {
            "id": "527c3a29-e4f5-481f-b21e-77050ead5690",
            "name": "phone number verified",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "phoneNumberVerified",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "phone_number_verified",
              "jsonType.label": "boolean"
            }
          }
        ]
      },
      {
        "id": "44fcb7fc-1311-4d67-84a1-b030aabc8381",
        "name": "web-origins",
        "description": "OpenID Connect scope for add allowed web origins to the access token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "display.on.consent.screen": "false",
          "consent.screen.text": ""
        },
        "protocolMappers": [
          {
            "id": "63d02bd3-8c72-408c-8755-f51968195316",
            "name": "allowed web origins",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-allowed-origins-mapper",
            "consentRequired": false,
            "config": {}
          }
        ]
      },
      {
        "id": "2f82c51b-1aae-4be3-b307-58ec1283e197",
        "name": "microprofile-jwt",
        "description": "Microprofile - JWT built-in scope",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "false"
        },
        "protocolMappers": [
          {
            "id": "08cbaf65-991b-4705-859f-fd793bff8512",
            "name": "groups",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-realm-role-mapper",
            "consentRequired": false,
            "config": {
              "multivalued": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "foo",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "groups",
              "jsonType.label": "String"
            }
          },
          {
            "id": "d876e95c-4685-4518-9d87-a3ad7d2ec817",
            "name": "upn",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "username",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "upn",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "36d55e21-bcc4-4ee9-9e67-ab0fc0f190cd",
        "name": "profile",
        "description": "OpenID Connect built-in scope: profile",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "gui.order": "2",
          "consent.screen.text": "${profileScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "8bb5e372-6b4b-4c24-a5f8-cea6f9beb929",
            "name": "profile",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "profile",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "profile",
              "jsonType.label": "String"
            }
          },
          {
            "id": "4fc3c8c6-7109-48f5-8c9c-197cea28f743",
            "name": "middle name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "middleName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "middle_name",
              "jsonType.label": "String"
            }
          },
          {
            "id": "6d994097-0495-44e0-9484-049f6b3d3ce3",
            "name": "gender",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "gender",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "gender",
              "jsonType.label": "String"
            }
          },
          {
            "id": "4e023fd9-a3f1-4672-9f6c-61f91bcf59e7",
            "name": "updated at",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "updatedAt",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "updated_at",
              "jsonType.label": "String"
            }
          },
          {
            "id": "7d8950e2-81c4-4f56-940b-e3d7f40f0e02",
            "name": "picture",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "picture",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "picture",
              "jsonType.label": "String"
            }
          },
          {
            "id": "2be5e1a8-1c91-4e4a-a2d8-d89c24263496",
            "name": "username",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "username",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "preferred_username",
              "jsonType.label": "String"
            }
          },
          {
            "id": "67165265-9891-4765-b2c6-c4dde5e73622",
            "name": "family name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "lastName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "family_name",
              "jsonType.label": "String"
            }
          },
          {
            "id": "77c5f422-3084-4cf6-905d-09ab93e8baf5",
            "name": "zoneinfo",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "zoneinfo",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "zoneinfo",
              "jsonType.label": "String"
            }
          },
          {
            "id": "5179b354-8a79-4c48-b73c-9510f0cefa0e",
            "name": "website",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "website",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "website",
              "jsonType.label": "String"
            }
          },
          {
            "id": "b6b74821-14d4-4620-9565-67bb51f82074",
            "name": "full name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-full-name-mapper",
            "consentRequired": false,
            "config": {
              "id.token.claim": "true",
              "access.token.claim": "true",
              "userinfo.token.claim": "true"
            }
          },
          {
            "id": "7a730ee9-c9cf-40f2-af99-8d3b622f1c91",
            "name": "birthdate",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "birthdate",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "birthdate",
              "jsonType.label": "String"
            }
          },
          {
            "id": "58590c87-0e3a-4179-b31a-a1398f14a938",
            "name": "nickname",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "nickname",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "nickname",
              "jsonType.label": "String"
            }
          },
          {
            "id": "6ecc1a89-749e-41d2-bcb5-23aafdacc625",
            "name": "locale",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "locale",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "locale",
              "jsonType.label": "String"
            }
          },
          {
            "id": "b1fd3339-5b5d-436a-b21a-6acd36160656",
            "name": "given name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "firstName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "given_name",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "dad3a98f-3a49-4184-87a7-652ece9b2eb4",
        "name": "offline_access",
        "description": "OpenID Connect built-in scope: offline_access",
        "protocol": "openid-connect",
        "attributes": {
          "consent.screen.text": "${offlineAccessScopeConsentText}",
          "display.on.consent.screen": "true"
        }
      },
      {
        "id": "7da4ef2e-c424-449f-9b4d-b8ac3f7b37ad",
        "name": "address",
        "description": "OpenID Connect built-in scope: address",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "gui.order": "",
          "consent.screen.text": "${addressScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "786168b5-b474-478c-92a4-ada6e00792ad",
            "name": "address",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-address-mapper",
            "consentRequired": false,
            "config": {
              "user.attribute.formatted": "formatted",
              "user.attribute.country": "country",
              "user.attribute.postal_code": "postal_code",
              "userinfo.token.claim": "true",
              "user.attribute.street": "street",
              "id.token.claim": "true",
              "user.attribute.region": "region",
              "access.token.claim": "true",
              "user.attribute.locality": "locality"
            }
          }
        ]
      },
      {
        "id": "db97416d-73d3-4535-bc2f-6bcd60bb3182",
        "name": "role_list",
        "description": "SAML role list",
        "protocol": "saml",
        "attributes": {
          "consent.screen.text": "${samlRoleListScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "abba5bf1-d5ce-4bc1-882f-1785335cc91c",
            "name": "role list",
            "protocol": "saml",
            "protocolMapper": "saml-role-list-mapper",
            "consentRequired": false,
            "config": {
              "single": "false",
              "attribute.nameformat": "Basic",
              "attribute.name": "Role"
            }
          }
        ]
      }
    ],
    "defaultDefaultClientScopes": [
      "profile",
      "web-origins",
      "roles",
      "email",
      "role_list"
    ],
    "defaultOptionalClientScopes": [
      "microprofile-jwt",
      "address",
      "offline_access",
      "phone"
    ],
    "browserSecurityHeaders": {
      "contentSecurityPolicyReportOnly": "",
      "xContentTypeOptions": "nosniff",
      "xRobotsTag": "none",
      "xFrameOptions": "SAMEORIGIN",
      "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
      "xXSSProtection": "1; mode=block",
      "strictTransportSecurity": "max-age=31536000; includeSubDomains"
    },
    "smtpServer": {
      "password": "yyyyyy",
      "replyToDisplayName": "JCP Auth Service",
      "starttls": "false",
      "auth": "true",
      "port": "587",
      "host": "zzz",
      "replyTo": "registrations@johnosproject.com",
      "from": "registrations@johnosproject.com",
      "fromDisplayName": "JCP Auth Service",
      "ssl": "false",
      "user": "xxxxxx"
    },
    "eventsEnabled": false,
    "eventsListeners": [
      "jboss-logging"
    ],
    "enabledEventTypes": [],
    "adminEventsEnabled": false,
    "adminEventsDetailsEnabled": false,
    "identityProviders": [],
    "identityProviderMappers": [],
    "components": {
      "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
        {
          "id": "470e62bc-430a-4907-a4c4-65f045164211",
          "name": "Allowed Client Scopes",
          "providerId": "allowed-client-templates",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "allow-default-scopes": [
              "true"
            ]
          }
        },
        {
          "id": "2a059e6a-68f0-4d1e-9f6e-58866538c253",
          "name": "Trusted Hosts",
          "providerId": "trusted-hosts",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "host-sending-registration-request-must-match": [
              "true"
            ],
            "client-uris-must-match": [
              "true"
            ]
          }
        },
        {
          "id": "68b0faa1-fcba-4195-8baa-f0bd17f88b3f",
          "name": "Max Clients Limit",
          "providerId": "max-clients",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "max-clients": [
              "200"
            ]
          }
        },
        {
          "id": "4a5bb109-4e22-40f3-b84c-688c43cec766",
          "name": "Allowed Protocol Mapper Types",
          "providerId": "allowed-protocol-mappers",
          "subType": "authenticated",
          "subComponents": {},
          "config": {
            "allowed-protocol-mapper-types": [
              "saml-user-property-mapper",
              "oidc-usermodel-attribute-mapper",
              "oidc-address-mapper",
              "oidc-usermodel-property-mapper",
              "oidc-full-name-mapper",
              "saml-role-list-mapper",
              "saml-user-attribute-mapper",
              "oidc-sha256-pairwise-sub-mapper"
            ]
          }
        },
        {
          "id": "b95ef3a8-4be5-4252-8c32-b2a39279dfed",
          "name": "Allowed Client Scopes",
          "providerId": "allowed-client-templates",
          "subType": "authenticated",
          "subComponents": {},
          "config": {
            "allow-default-scopes": [
              "true"
            ]
          }
        },
        {
          "id": "4236059f-479d-4144-997c-8cf491311d54",
          "name": "Allowed Protocol Mapper Types",
          "providerId": "allowed-protocol-mappers",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "allowed-protocol-mapper-types": [
              "saml-user-attribute-mapper",
              "saml-user-property-mapper",
              "saml-role-list-mapper",
              "oidc-usermodel-property-mapper",
              "oidc-usermodel-attribute-mapper",
              "oidc-address-mapper",
              "oidc-full-name-mapper",
              "oidc-sha256-pairwise-sub-mapper"
            ]
          }
        },
        {
          "id": "51c20eb8-62ed-4b22-bbcc-a18724ec7a4a",
          "name": "Full Scope Disabled",
          "providerId": "scope",
          "subType": "anonymous",
          "subComponents": {},
          "config": {}
        },
        {
          "id": "18e44070-479f-4afb-9463-88d05891700b",
          "name": "Consent Required",
          "providerId": "consent-required",
          "subType": "anonymous",
          "subComponents": {},
          "config": {}
        }
      ],
      "org.keycloak.keys.KeyProvider": [
        {
          "id": "5ba2459b-460d-4f3e-a256-7d3eb7f1e270",
          "name": "hmac-generated",
          "providerId": "hmac-generated",
          "subComponents": {},
          "config": {
            "kid": [
              "5ce62895-b69c-442c-a308-8207150fcff3"
            ],
            "secret": [
              "ultiEHizbl9du9jYX5Zwvv7ub0PkmGgRfltDOW8lqn7DZropjryS4oNl41tav12IgUk8R6MDZ4IXM8cyLgoVaQ"
            ],
            "priority": [
              "100"
            ],
            "algorithm": [
              "HS256"
            ]
          }
        },
        {
          "id": "661e58e6-bade-41bf-b1db-5396841b3ccb",
          "name": "aes-generated",
          "providerId": "aes-generated",
          "subComponents": {},
          "config": {
            "kid": [
              "9a8e0c81-fdba-4faa-81ec-41879dfabd16"
            ],
            "secret": [
              "BS3l9w5d6jNZF88e2T47Dw"
            ],
            "priority": [
              "100"
            ]
          }
        },
        {
          "id": "4c21f57f-e666-4734-ba59-7ff4243e90e8",
          "name": "rsa-generated",
          "providerId": "rsa-generated",
          "subComponents": {},
          "config": {
            "privateKey": [
              "MIIEpAIBAAKCAQEAvinVu21hgldQmkRH45Q97xbKW13l6/xc9hK2g1gdJc1yk9PAdTsTi31EtQtmMOTjNSimu47DL6UDfQsGjOR4FEFIKLIAKSHz9caDxt2vs3bLamWAPlvpHxseOdbU409/6+KD0WE1JFMCMdh+VrW50v/X2ACANoU5v9Zg23ClegMnpjhKDubQLcWODSS+gsu9l8cq0iaPqQs6EkYawZqyLwVvKN/V+zBCBorPFY4sDmyFNQAFRVmKigWF8QEzOm/NHZ9dar6fZyubcb00XUhwsZf2FD8aAJbUXCBGV8NB7uWJtJQuPgvZOB9d5uPmAnNS1DlNDWG3Oc+JoQnE2S7uywIDAQABAoIBAQCMNkhzU+krs7mopWPkN2+bFFDMIWXgJEle3tlX6uZC80LiIKWtSovUs96vJuKIdpvYnEqjzFW6kY8K6dBAnkyzkpbj+qsHqRM6Ss7rGJXuW08M+h4e3KH833/f4blCiWGmyXOsNGJ8j//0RM6SnJeRLjc1+tiOWpkEC8uKwXohhWBzptWbmJV5UW3eod5utMc4gaKKHfdoLdHs4EOU4WTPjfg9qlUR3RD1rCKVDry/r7oeUgyWWDtS0okKIeQJOVRRZS6fFhUfGBvAOWpvNtQMGUZIj0jGYIhHZWZmhF4fCTwILwW3EhuI5f98J3OnIm6wdQK46WWbL4D6KgXUgTDxAoGBAOPGTPWZ8dXSrdyA80yHztfzfb9ZovUYym67n3+2U67gn8zwymevU6zvy9JPdUBtA/bmPx0g2XsqDOHA7Gpmn2z0xx/wNniAdlGuJp/CXbDwrGppoZU6arHhbAnEvXOF/e2Ljl1HuoQNZJzB26KpfAUiNkykCT1KOLoKhErH7TqlAoGBANW6ZLo8XWm6AMeTVgFFqL9M04ca+TpYHHYiuz5Q5VV1m221kyd5cXIu3cxK7V+jrGEYk9FZcSoXZGjpnZgEqbmwPN3J2MBh9cojbgGphYiGRDqGva4GR4VTcEGjsjFwdnmqAgCcK9/DMSBYX5/tvPx/JNZxWvE9N5OuqddGJPivAoGAFxkm+MkRwzNIOlJBWgNzsGaa2+rFIcHP1YblV9gviE5zJh9NB1K6U5FFxCAWrd/gRQt4XwXTyC+ter9LukaJ6EyyXMTJYVL1rLbSZ+UYBzeA5JGttypjY4KOqDbxV2PBKnO6ji8V9Qo+p77o/Qfe8c5UX1VLMpHySruCSusXXZkCgYEAuwMy2iax0i5YOkl4ivpp8qIFwQVgKKYqmVBAqQFd+k5DJ1cnIPZJxxCtMPIrDHGKBxfbV+a8d4kqagZoyDjkTj+gsqzIxWWyDSK9QiUUW+aoUtHNrTV/ZXEiG71h0ZLHiCOzRtdgKJaCKPxLCASdRg72q9FaMxZOyCGgKWcOOK8CgYBfLsA+b57NUgx9/T/0HFxM5SAZ0OJU/IUKjWHFGGBTs1MsiP6LqoB5FJMZaFhD5q8tq1PL2cgTafqtldfqfxosK/0zQYLK2hSFa1f7aShC3lXujzHTQZGutVVHArUcqcCsxX1G9GQNWj3IlRuxHGsBgGZURZYZG8weq0G40nNbbQ=="
            ],
            "certificate": [
              "MIIClTCCAX0CBgFwtZILyzANBgkqhkiG9w0BAQsFADAOMQwwCgYDVQQDDANKQ1AwHhcNMjAwMzA3MTUxNTEyWhcNMzAwMzA3MTUxNjUyWjAOMQwwCgYDVQQDDANKQ1AwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC+KdW7bWGCV1CaREfjlD3vFspbXeXr/Fz2EraDWB0lzXKT08B1OxOLfUS1C2Yw5OM1KKa7jsMvpQN9CwaM5HgUQUgosgApIfP1xoPG3a+zdstqZYA+W+kfGx451tTjT3/r4oPRYTUkUwIx2H5WtbnS/9fYAIA2hTm/1mDbcKV6AyemOEoO5tAtxY4NJL6Cy72XxyrSJo+pCzoSRhrBmrIvBW8o39X7MEIGis8VjiwObIU1AAVFWYqKBYXxATM6b80dn11qvp9nK5txvTRdSHCxl/YUPxoAltRcIEZXw0Hu5Ym0lC4+C9k4H13m4+YCc1LUOU0NYbc5z4mhCcTZLu7LAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAJq9NX91gj6jnoBkpDsswZeRCr4KD/oMEja/cHzUJRr/ifs70+zy+jQ8dATNo2jOvXYxqneX40JFwjIYFDpDWDMpMIrlbCI7Js7nUcW3sKQ3BIC1eIo6rtoyMth2RD203RTDQPGj0FJQpi7miODIWgAAFtpLDFO9U2qpvax5ZiMC/q1m0tteEo44jv+cTI1F3Z4cGkXxJhk0U4jGM0i+zy4HmZ1Oe4HLTNZ2/KYPAzQ7osVVoqEgOytwrr4L5olQJlYy0b2VfOv9uxwcl+f58gLuDhK034dEJAUOSwCYxDe/3nkOk6CYxr07Tag01+AKbjiqX1/CNxJFtV/M/fWsAD4="
            ],
            "priority": [
              "100"
            ]
          }
        }
      ]
    },
    "internationalizationEnabled": false,
    "supportedLocales": [],
    "authenticationFlows": [
      {
        "id": "4a206ba7-abfd-455e-a05d-197ca64bf615",
        "alias": "Account verification options",
        "description": "Method with which to verity the existing account",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-email-verification",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "flowAlias": "Verify Existing Account by Re-authentication",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "52d1d14e-8108-474d-81d5-cb0c2e927945",
        "alias": "Authentication Options",
        "description": "Authentication options.",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "basic-auth",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "basic-auth-otp",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "auth-spnego",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 30,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "657f3fae-769f-450e-ae45-c81b66a9d0c0",
        "alias": "Browser - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "auth-otp-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "2f9a439a-b758-4b08-9f02-dff0fb4e515b",
        "alias": "Direct Grant - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "direct-grant-validate-otp",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "0d5fbb81-cec8-4ff6-a5d0-f720c4f6961a",
        "alias": "First broker login - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "auth-otp-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "de31f941-ca71-400c-9391-1c7cc8b72770",
        "alias": "Handle Existing Account",
        "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-confirm-link",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "REQUIRED",
            "priority": 20,
            "flowAlias": "Account verification options",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "b8308163-4757-4966-9e8f-0ca3f530d1f1",
        "alias": "Reset - Conditional OTP",
        "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "reset-otp",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "b7cebdae-b540-4565-bc05-2089bf2bb6b6",
        "alias": "User creation or linking",
        "description": "Flow for the existing/non-existing user alternatives",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticatorConfig": "create unique user config",
            "authenticator": "idp-create-user-if-unique",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "flowAlias": "Handle Existing Account",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "2a2a2371-1d4d-448e-b6dc-e706b234a24b",
        "alias": "Verify Existing Account by Re-authentication",
        "description": "Reauthentication of existing account",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-username-password-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 20,
            "flowAlias": "First broker login - Conditional OTP",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "64a34332-ffe6-4242-b108-397331605b03",
        "alias": "browser",
        "description": "browser based authentication",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "auth-cookie",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "auth-spnego",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "identity-provider-redirector",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 25,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "ALTERNATIVE",
            "priority": 30,
            "flowAlias": "forms",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "fdde9c81-a77f-4c16-bdbe-5b7abbab5210",
        "alias": "clients",
        "description": "Base authentication for clients",
        "providerId": "client-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "client-secret",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "client-jwt",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "client-secret-jwt",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 30,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "client-x509",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 40,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "211f5877-358b-4d81-ada2-6ca1599d25f9",
        "alias": "direct grant",
        "description": "OpenID Connect Resource Owner Grant",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "direct-grant-validate-username",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "direct-grant-validate-password",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 30,
            "flowAlias": "Direct Grant - Conditional OTP",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "4fa58e6b-7c92-429c-a077-68c868883d00",
        "alias": "docker auth",
        "description": "Used by Docker clients to authenticate against the IDP",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "docker-http-basic-authenticator",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "e079d674-49ff-489e-a32a-1bafdcee1036",
        "alias": "first broker login",
        "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticatorConfig": "review profile config",
            "authenticator": "idp-review-profile",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "REQUIRED",
            "priority": 20,
            "flowAlias": "User creation or linking",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "c13659f9-36f9-4866-9db5-ffd10c13ed44",
        "alias": "forms",
        "description": "Username, password, otp and other auth forms.",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "auth-username-password-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 20,
            "flowAlias": "Browser - Conditional OTP",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "4fa61955-eb46-4983-a96a-35778526ef76",
        "alias": "http challenge",
        "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "no-cookie-redirect",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "REQUIRED",
            "priority": 20,
            "flowAlias": "Authentication Options",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "49ba5b5d-47ce-4ed5-8125-010c6aa3e549",
        "alias": "registration",
        "description": "registration flow",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "registration-page-form",
            "authenticatorFlow": true,
            "requirement": "REQUIRED",
            "priority": 10,
            "flowAlias": "registration form",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "dc853715-bd63-4c1a-9908-c3b185ea5bcb",
        "alias": "registration form",
        "description": "registration form",
        "providerId": "form-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "registration-user-creation",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "registration-profile-action",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 40,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "registration-password-action",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 50,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "registration-recaptcha-action",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 60,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "a4845541-d8a6-44f8-b5d0-68319e2d2d8f",
        "alias": "reset credentials",
        "description": "Reset credentials for a user if they forgot their password or something",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "reset-credentials-choose-user",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "reset-credential-email",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "reset-password",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 30,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 40,
            "flowAlias": "Reset - Conditional OTP",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "8c280e49-0a81-41a0-9087-7b7be9dd12c1",
        "alias": "saml ecp",
        "description": "SAML ECP Profile Authentication Flow",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "http-basic-authenticator",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      }
    ],
    "authenticatorConfig": [
      {
        "id": "bf966ed3-595d-48a2-851c-90626b6142a1",
        "alias": "create unique user config",
        "config": {
          "require.password.update.after.registration": "false"
        }
      },
      {
        "id": "38ad782c-f46f-4090-9203-38eebd139659",
        "alias": "review profile config",
        "config": {
          "update.profile.on.first.login": "missing"
        }
      }
    ],
    "requiredActions": [
      {
        "alias": "CONFIGURE_TOTP",
        "name": "Configure OTP",
        "providerId": "CONFIGURE_TOTP",
        "enabled": true,
        "defaultAction": false,
        "priority": 10,
        "config": {}
      },
      {
        "alias": "terms_and_conditions",
        "name": "Terms and Conditions",
        "providerId": "terms_and_conditions",
        "enabled": false,
        "defaultAction": false,
        "priority": 20,
        "config": {}
      },
      {
        "alias": "UPDATE_PASSWORD",
        "name": "Update Password",
        "providerId": "UPDATE_PASSWORD",
        "enabled": true,
        "defaultAction": false,
        "priority": 30,
        "config": {}
      },
      {
        "alias": "UPDATE_PROFILE",
        "name": "Update Profile",
        "providerId": "UPDATE_PROFILE",
        "enabled": true,
        "defaultAction": false,
        "priority": 40,
        "config": {}
      },
      {
        "alias": "VERIFY_EMAIL",
        "name": "Verify Email",
        "providerId": "VERIFY_EMAIL",
        "enabled": true,
        "defaultAction": false,
        "priority": 50,
        "config": {}
      },
      {
        "alias": "delete_account",
        "name": "Delete Account",
        "providerId": "delete_account",
        "enabled": false,
        "defaultAction": false,
        "priority": 60,
        "config": {}
      },
      {
        "alias": "update_user_locale",
        "name": "Update User Locale",
        "providerId": "update_user_locale",
        "enabled": true,
        "defaultAction": false,
        "priority": 1000,
        "config": {}
      }
    ],
    "browserFlow": "browser",
    "registrationFlow": "registration",
    "directGrantFlow": "direct grant",
    "resetCredentialsFlow": "reset credentials",
    "clientAuthenticationFlow": "clients",
    "dockerAuthenticationFlow": "docker auth",
    "attributes": {
      "cibaBackchannelTokenDeliveryMode": "poll",
      "cibaExpiresIn": "120",
      "cibaAuthRequestedUserHint": "login_hint",
      "oauth2DeviceCodeLifespan": "600",
      "clientOfflineSessionMaxLifespan": "0",
      "oauth2DevicePollingInterval": "600",
      "clientSessionIdleTimeout": "0",
      "clientSessionMaxLifespan": "0",
      "clientOfflineSessionIdleTimeout": "0",
      "cibaInterval": "5"
    },
    "keycloakVersion": "14.0.0",
    "userManagedAccessAllowed": false,
    "clientProfiles": {
      "profiles": []
    },
    "clientPolicies": {
      "policies": []
    }
  }
]