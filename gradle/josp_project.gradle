/*******************************************************************************
 * The John Operating System Project is the collection of software and configurations
 * to generate IoT EcoSystem, like the John Operating System Platform one.
 * Copyright (C) 2021 Roberto Pompermaier
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 ******************************************************************************/

/**
 * Project's build configurations.
 *
 * Summary:
 * - Project build configurations
 * - Detailed configurations
 *
 * <h2>Project build configurations</h2>
 * Those are the main configurations for project build. Here developers can easily
 * configure the build system. Each config is set as Gradle ext property and then
 * accessed from all Gradle files.
 *
 * Configs descriptions can be found at config declaration.
 *
 * <h2>Detailed configurations</h2>
 * Previous 'Project build configurations' actually are used to configure the
 * 'Detailed configurations' with default values. So 'Project build configurations'
 * can be considered pre-set of 'Detailed configurations'.
 *
 * Most of detailed configurations can be customized directly from the
 * 'Project build configurations' with the OVERRIDE_XY configs.
 *
 * Detailed configs descriptions and their default values can be found at
 * config declaration.
 */


// ---------------
// Project configs
// ---------------

group = 'com.robypomper.josp'
sourceCompatibility = '1.8'

ext {

    // PROJECT BUILD CONFIGURATIONS - START

    set('projectUrl', 'https://www.johnosproject.org')
    set('projectGit', 'bitbucket.org:johnosproject_shared/com.robypomper.josp.git')
    set('projectGitUrl', 'https://bitbucket.org/johnosproject_shared/com.robypomper.josp')

    // Preset build modes for JOSP Project
    //set('jospMode', ext.get('jospModes.DEV'))           // on first build, set jospDependenciesVersion=CURRENT
    //set('jospMode', ext.get('jospModes.STAGE'))         // on first build, set jospDependenciesVersion=PREV
    set('jospMode', ext.get('jospModes.RELEASE'))         // on first build, set jospDependenciesVersion=PREV

    // Set true to enable private tasks (require $USER_HOME/.gradle/properties.gradle file)
    set('OVERRIDE_enablePrivate', false)

    // Customize version used for JOSP Components build
    //ext.set('OVERRIDE_jospBuildVersion',ext.get('jospVersions.CURRENT'))           // Default: NEXT if jospMode=DEV, CURRENT otherwise
    //ext.set('OVERRIDE_jospBuildClassifier','alpha')                                // Default: 'DEV if jospMode=DEV, 'SNAPSHOT' if jospMode='STAGE, '' otherwise

    // Customize version required for JOSP Components internal dependencies
    // (de-comment for first jospModes=DEV's build)
    //ext.set('OVERRIDE_jospDependenciesVersion',ext.get('jospVersions.CURRENT'))    // Default: jospBuildVersion
    //ext.set('OVERRIDE_jospDependenciesVersion','2.2.3-DEV')                        // Default: jospBuildVersion

    // PROJECT BUILD CONFIGURATIONS - END

}


// -----------------------
// Detailed configurations
// -----------------------

// enablePrivate
// If true, enable remote publications but require the properties.gradle file
// It's true when jospMode=STAGE or RELEASE
// When the source code is released, it's in jospMode=RELEASE and enablePrivate=false
def enablePrivate = hasProperty('OVERRIDE_enablePrivate')
        ? ext.get('OVERRIDE_enablePrivate')
        : (ext.get('jospMode') == ext.get('jospModes.DEV')
        ? false
        : true
)
ext.set('enablePrivate', enablePrivate)

// disableDocs
// If true, all docs tasks are disabled
// It's true when jospMode=DEV
def disableDocs = hasProperty('OVERRIDE_disableDocs')
        ? ext.get('OVERRIDE_disableDocs')
        : (ext.get('jospMode') == ext.get('jospModes.DEV')
        ? true
        : false
)
ext.set('disableDocs', disableDocs)
