/*******************************************************************************
 * The John Operating System Project is the collection of software and configurations
 * to generate IoT EcoSystem, like the John Operating System Platform one.
 * Copyright (C) 2021 Roberto Pompermaier
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 ******************************************************************************/

/**
 * Gradle configurations to manage JOSP's components and dependencies versions.
 *
 * Summary:
 * - JOSP Internal Dependencies Versions
 * - JOSP External Dependencies Versions
 *
 * <h2>JOSP Internal Dependencies Versions</h2>
 * JOSP Internal Dependencies refers to intra JOSP Components dependencies.
 * Normally required JOSP components, must have the same version as building
 * JOSP components; but when creating a new version (also switching jospMode)
 * it's required to publish all JOSP Components with the new version but
 * requiring an existing version. This is possible forcing the
 * jospDependenciesVersion config in 'josp_project.gradle' file.
 *
 * Here, for each JOSP Components are defined two versions: one for the current
 * building component, and the second one for the required component version.
 * You can also customize versions manually, but be careful to 'missing dependencies'
 * errors on project builds.
 *
 * <h2>JOSP External Dependencies Versions</h2>
 * JOSP Internal Dependencies refers to 3rd party dependencies. Here are defined
 * all required versions of external dependencies.
 */


// -----------------------------------
// JOSP Internal Dependencies Versions
// -----------------------------------

//@formatter:off


def jospBuildVersion = hasProperty('OVERRIDE_jospBuildVersion')             // define which JOSP dependencies's versions current source code require
        ? ext.get('OVERRIDE_jospBuildVersion')
        : (ext.get('jospMode') == ext.get('jospModes.DEV')
            ? ext.get('jospVersions.NEXT')
            : ext.get('jospVersions.CURRENT')
        )
jospBuildVersion += hasProperty('OVERRIDE_jospBuildClassifier')             // define which JOSP dependencies's versions current source code require
        ? '-' + ext.get('OVERRIDE_jospBuildClassifier')
        : (ext.get('jospMode') == ext.get('jospModes.DEV')
            ? '-DEV'
            : (ext.get('jospMode') == ext.get('jospModes.STAGE')
                ? '-SNAPSHOT'
                : ''
            )
        )

def jospDependenciesVersion = hasProperty('OVERRIDE_jospDependenciesVersion')              // define versions current source code provide
        ? ext.get('OVERRIDE_jospDependenciesVersion')
        : jospBuildVersion

if (jospBuildVersion!=jospDependenciesVersion)
    logger.warn("Warn: Builded JOSP Components do NOT depends to JOSP Components with the same version\n\t(building version: '$jospBuildVersion', dependencies version: '$jospDependenciesVersion'")

ext {
    set('version.deps.josp'           , jospDependenciesVersion)
    set('version.build.josp'          , jospBuildVersion)

    // JOSP
    set('version.deps.jospAPIs'       , jospDependenciesVersion)                // since v210
    set('version.build.jospAPIs'      , jospBuildVersion)
    set('version.deps.jospCommons'    , jospDependenciesVersion)
    set('version.build.jospCommons'   , jospBuildVersion)
    set('version.deps.jospJOD'        , jospDependenciesVersion)
    set('version.build.jospJOD'       , jospBuildVersion)
    set('version.deps.jospJSL'        , jospDependenciesVersion)
    set('version.build.jospJSL'       , jospBuildVersion)

    // JCP Commons
    set('version.deps.jcpAPIsPublic'  , jospDependenciesVersion)
    set('version.build.jcpAPIsPublic' , jospBuildVersion)
    set('version.deps.jcpCommons'     , jospDependenciesVersion)
    set('version.build.jcpCommons'    , jospBuildVersion)

    // JCP DB
    set('version.deps.jcpDB'          , jospDependenciesVersion)                // since v210
    set('version.build.jcpDB'         , jospBuildVersion)
    set('version.deps.jcpDBAPIs'      , jospDependenciesVersion)                // since v210
    set('version.build.jcpDBAPIs'     , jospBuildVersion)
    set('version.deps.jcpDBFE'        , jospDependenciesVersion)                // since v210
    set('version.build.jcpDBFE'       , jospBuildVersion)

    // JCP Services
    set('version.deps.jcpService'     , jospDependenciesVersion)
    set('version.build.jcpService'    , jospBuildVersion)
    set('version.deps.jcpAPIs'        , jospDependenciesVersion)
    set('version.build.jcpAPIs'       , jospBuildVersion)
    set('version.deps.jcpGWs'         , jospDependenciesVersion)                // since v210
    set('version.build.jcpGWs'        , jospBuildVersion)
    set('version.deps.jcpJSLWebBridge'  , jospDependenciesVersion)              // since v210
    set('version.build.jcpJSLWebBridge' , jospBuildVersion)
    set('version.deps.jcpFE'          , jospDependenciesVersion)
    set('version.build.jcpFE'         , jospBuildVersion)
    set('version.deps.jcpAll'         , jospDependenciesVersion)                // since v210
    set('version.build.jcpAll'        , jospBuildVersion)
}
//@formatter:on


// -----------------------------------
// JOSP External Dependencies Versions
// -----------------------------------

//@formatter:off
ext {
    set('version.SpringCloud'       , 'Hoxton.SR9')
    set('version.tomcat'            , '9.0.30')
    set('version.Keycloak'          , '14.0.0')
    set('version.slf4j'             , '1.7.30')
    set('version.apache.log4j'      , '2.13.1')
    set('version.snakeyaml'         , '1.25')
    set('version.scribejava'        , '6.9.0')
    set('version.lombok'            , '1.18.12')
    set('version.jakarta'           , '2.2.3')
    set('version.hibernate'         , '5.4.10.Final')
    set('version.jmdns'             , '3.5.5')
    set('version.cli'               , '1.4')
    set('version.cliche'            , '110413')
    set('version.swagger'           , '1.5.21')
    set('version.swaggerSpring'     , '2.9.2')
    set('version.jackson'           , '2.10.2')
    set('version.htmlcleaner'       , '2.24')
    set('version.json-path'         , '2.4.0')
}
//@formatter:on
